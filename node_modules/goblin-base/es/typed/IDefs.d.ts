declare type formatterFunc = (val: number) => string | number;
interface ICommonDefs {
    dataKey: string;
    type?: string;
    tickCount?: number;
    formatter?: string | formatterFunc;
    range?: number[];
}
interface ILinearCommonDefs {
    nice?: boolean;
    min?: number;
    max?: number;
    tickInterval?: number;
}
export declare type ILinearDefs = ICommonDefs & ILinearCommonDefs;
interface ISCatDefs {
    values?: string;
}
export declare type ICatDefs = ICommonDefs & ISCatDefs;
interface ITimeCommonDefs {
    mask?: string;
}
export declare type ITimeDefs = ICommonDefs & ILinearCommonDefs & ITimeCommonDefs;
interface ISTimeCatDefs {
    nice?: boolean;
    mask?: string;
    values?: string;
}
export declare type ITimeCatDefs = ILinearCommonDefs & ISTimeCatDefs;
export declare type IDefs = ILinearDefs | ICatDefs | ITimeCatDefs;
declare type IDefsConfig = IDefs | IDefs[];
export default IDefsConfig;
