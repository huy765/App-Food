var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { Util } from '../utils/Commom';
function setGuideLine(chart, item) {
    var newItem = Util.omit(item, ['type']);
    chart.guide().line(__assign({}, newItem));
}
function setGuideTag(chart, item) {
    var newItem = Util.omit(item, ['type']);
    chart.guide().tag(__assign({}, newItem));
}
function setGuideArc(chart, item) {
    if (item.quickType === 'parallel') {
        var data = item.data;
        chart.guide().arc(__assign({ start: ['min', data], end: ['max', data] }, item));
        chart.guide().arc(__assign({ start: ['max', data], end: ['min', data] }, item));
    }
    else if (item.quickType === 'normal') {
        var data = item.data;
        chart.guide().line(__assign({ start: [data, 'min'], end: [data, 'max'] }, item));
    }
    else {
        var newItem = Util.omit(item, ['type']);
        chart.guide().arc(__assign({}, newItem));
    }
}
function setGuideText(chart, item) {
    var newItem = Util.omit(item, ['type']);
    chart.guide().text(__assign({}, newItem));
}
function setGuideHtml(chart, item) {
    var newItem = Util.omit(item, ['type']);
    chart.guide().html(__assign({}, newItem));
}
function setGuideRect(chart, item) {
    var newItem = Util.omit(item, ['type']);
    chart.guide().rect(__assign({}, newItem));
}
export var process = function (chart, config) {
    var cGuide = Util.deepClone(config.guide);
    var isArr = Util.isArray(cGuide);
    if (Util.isNil(cGuide) || Util.isEmpty(cGuide)) {
        return;
    }
    var arrGuide = isArr ? cGuide : [cGuide];
    chart.guide().clear();
    arrGuide.forEach(function (res) {
        if (res.type === 'line') {
            setGuideLine(chart, res);
        }
        else if (res.type === 'text') {
            setGuideText(chart, res);
        }
        else if (res.type === 'tag') {
            setGuideTag(chart, res);
        }
        else if (res.type === 'rect') {
            setGuideRect(chart, res);
        }
        else if (res.type === 'arc') {
            setGuideArc(chart, res);
        }
        else if (res.type === 'html') {
            setGuideHtml(chart, res);
        }
    });
};
//# sourceMappingURL=setGuideConfig.js.map